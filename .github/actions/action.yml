name: Reusable Reporter
description: 'Create an issue when error or close issue'

inputs:
    outcome:
        description: "Result from the task"
        required: true
    label:
        description: "Issue label"
        required: true
    title:
        description: "Issue title"
        required: true

runs:
    using: "composite"
    steps:
        - name: Upon Error, create an issue or comment on an issue
          if: ${{inputs.outcome == 'failure'}}
          uses: actions/github-script@v7
          with:
            script: |
                    let body = `${{inputs.title }} in workflow ${{github.workflow}}`
                    const assigness = [context.actor]
                    const { data, issues } = await github.rest.issues.listForRepo({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: 'open',
                        labels: ${{inputs.label}},
                    })
                    const existingIssues = issues.find((issue) => issue.title === ${{inputs.title}})
                    if (!existingIssues) {
                        await github.rest.issues.create({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            title: ${{inputs.title}},
                            labels: [${{inputs.label}}],
                            body: body,
                            assignees:assignees
                        })
                    }else {
                        body =  `${{inputs.title }} in workflow ${{github.workflow}}, Thanks for reporting`
                        await github.rest.issues.createComment({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: existingIssues.number,
                            body: body,
                        })
                    }
        
        - name: close issue when outcome is successful
          if: ${{inputs.outcome == 'success'}}
          uses: actions/github-script@v7
          with:
            script: |
                    const { data, issues } = await github.rest.issues.listForRepo({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: 'open',
                        labels: ${{inputs.label}},
                    })

                    for(const issue of issues) {
                        await github.rest.issues.update({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: issue.number,
                            state: 'closed',
                        });
                    }
